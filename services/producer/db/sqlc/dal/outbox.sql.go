// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: outbox.sql

package DAL

import (
	"context"
	"encoding/json"
)

const createOutbox = `-- name: CreateOutbox :one
INSERT INTO outbox (aggregate_type, aggregate_id, type, payload)
VALUES ($1, $2, $3, $4)
RETURNING id, aggregate_type, aggregate_id, type, payload, created_at
`

type CreateOutboxParams struct {
	AggregateType string          `json:"aggregateType"`
	AggregateID   string          `json:"aggregateId"`
	Type          string          `json:"type"`
	Payload       json.RawMessage `json:"payload"`
}

func (q *Queries) CreateOutbox(ctx context.Context, arg CreateOutboxParams) (Outbox, error) {
	row := q.db.QueryRow(ctx, createOutbox,
		arg.AggregateType,
		arg.AggregateID,
		arg.Type,
		arg.Payload,
	)
	var i Outbox
	err := row.Scan(
		&i.ID,
		&i.AggregateType,
		&i.AggregateID,
		&i.Type,
		&i.Payload,
		&i.CreatedAt,
	)
	return i, err
}
